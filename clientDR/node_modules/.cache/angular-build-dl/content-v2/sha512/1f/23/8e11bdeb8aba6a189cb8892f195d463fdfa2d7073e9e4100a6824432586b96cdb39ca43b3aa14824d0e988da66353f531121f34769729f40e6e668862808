{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/create-user/create-user.component.ts","webpack:///src/app/create-user/create-user.component.html","webpack:///src/app/create-vm/create-vm.component.ts","webpack:///src/app/create-vm/create-vm.component.html","webpack:///src/app/list-file/list-file.component.ts","webpack:///src/app/list-file/list-file.component.html","webpack:///src/app/list-vm/list-vm.component.ts","webpack:///src/app/list-vm/list-vm.component.html","webpack:///src/app/model/filter-list.ts","webpack:///src/app/model/size-list.ts","webpack:///src/app/model/user.ts","webpack:///src/app/model/virtualMachine.ts","webpack:///src/app/search-file/search-file.component.ts","webpack:///src/app/search-file/search-file.component.html","webpack:///src/app/service/file.service.ts","webpack:///src/app/service/user.service.ts","webpack:///src/app/service/virtual-machine.service.ts","webpack:///src/app/user-login/user-login.component.ts","webpack:///src/app/user-login/user-login.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","hide_all","click_name","click_size","click_date","submit","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","CreateUserComponent","userService","router","user","submitted","createUser","subscribe","event","console","log","save","onSubmit","CreateVmComponent","vmService","vm","addVM","ListFileComponent","fileService","window","localStorage","getItem","navigate","isIp","toString","length","getListPerVM","data","files","result","table","ListVmComponent","vms","VM","setItem","ip","removeItem","deleteVMByIP","filter","v","scanAll","FilterList","values","name","viewValue","SizeList","value","User","virtualMachine","listFilter","listSize","SearchFileComponent","checkInput","onClickName","onClickSize","onClickDate","onClickSubmit","FileService","http","baseUrl","url","listPerVM","get","type","providedIn","UserService","post","VirtualMachineService","VirtualMachine","username","put","delete","UserLoginComponent","userLogin","status","token","timerInterval","fire","icon","html","showCancelButton","showConfirmButton","footer","timer","onBeforeOpen","showLoading","setInterval","content","getContent","b","querySelector","textContent","onClose","clearInterval","gotoList","dismiss","DismissReason","text","message","environment","production","bootstrapModule","catch","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAMC,MAAM,GAAW,CACnB;AAAEC,UAAI,EAAE,EAAR;AAAYC,gBAAU,EAAE,YAAxB;AAAsCC,eAAS,EAAE;AAAjD,KADmB,EAEnB;AAAEF,UAAI,EAAE,YAAR;AAAsBG,eAAS,EAAE;AAAjC,KAFmB,EAGnB;AAAEH,UAAI,EAAE,iBAAR;AAA2BG,eAAS,EAAE;AAAtC,KAHmB,EAInB;AAAEH,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KAJmB,EAKnB;AAAEH,UAAI,EAAE,KAAR;AAAeG,eAAS,EAAE;AAA1B,KALmB,EAMnB;AAAEH,UAAI,EAAE,OAAR;AAAiBG,eAAS,EAAE;AAA5B,KANmB,EAOnB;AAAEH,UAAI,EAAE,QAAR;AAAkBG,eAAS,EAAE;AAA7B,KAPmB,CAAvB;;QAcaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACvB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaU,Y;;;AALb;AAAA;;AAME,aAAAC,KAAA,GAAQ,iBAAR;AAiBD;;;;yCAhBe;AACZC,kBAAQ;AACT;;;sCAEU;AACTC,oBAAU;AACX;;;sCACU;AACTC,oBAAU;AACX;;;sCACU;AACTC,oBAAU;AACX;;;wCACY;AACZC,gBAAM;AACR;;;;;;;uBAjBYN,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACVzB;;;;;;;;;sEDUaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTO,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEZzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBANJ,CACP,uEADO,EAEL,oEAFK,EAGL,0DAHK,EAIL,qEAJK,CAMI;;;;0HAGFA,S,EAAS;AAAA,uBAjBlB,2DAiBkB,EAhBlB,mFAgBkB,EAflB,sFAekB,EAdlB,gFAckB,EAblB,sFAakB,EAZlB,iFAYkB,EAXlB,2EAWkB;AAXH,kBAGf,uEAHe,EAIb,oEAJa,EAKb,0DALa,EAMb,qEANa;AAWG,O;AALA,K;;;;;sEAKTA,S,EAAS;cAnBrB,sDAmBqB;eAnBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,mFAFY,EAGZ,sFAHY,EAIZ,gFAJY,EAKZ,sFALY,EAMZ,iFANY,EAOZ,2EAPY,CADN;AAURZ,iBAAO,EAAE,CACP,uEADO,EAEL,oEAFK,EAGL,0DAHK,EAIL,qEAJK,CAVD;AAgBRa,mBAAS,EAAE,EAhBH;AAiBRC,mBAAS,EAAE,CAAC,2DAAD;AAjBH,S;AAmBY,Q;;;;;;;;;;;;;;;;;;AChCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,mB;;;AAGX,mCAAoBC,WAApB,EACUC,MADV,EAC0B;AAAA;;AADN,aAAAD,WAAA,GAAAA,WAAA;AACV,aAAAC,MAAA,GAAAA,MAAA;AAHR,aAAAC,IAAA,GAAa,IAAI,gDAAJ,EAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AAE2B;;;;mCAEnB,CACP;;;+BACM;AACH,eAAKH,WAAL,CAAiBI,UAAjB,CAA4B,KAAKF,IAAjC,EACOG,SADP,CACiB,UAAAC,KAAK,EAAI;AAChB,gBAAIA,KAAK,YAAY,iEAArB,EAAmC;AAC/BC,qBAAO,CAACC,GAAR,CAAY,aAAZ;AACH;AACJ,WALP;AAMD;;;mCAGU;AACP,eAAKL,SAAL,GAAiB,IAAjB;AACA,eAAKM,IAAL;AACH;;;;;;;uBArBMV,mB,EAAmB,kI,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,w0B;AAAA;AAAA;ACXhC;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAM;AAAA,mBAAY,IAAAW,QAAA,EAAZ;AAAsB,WAAtB;;AAGF;;AACI;;AAAoF;AAAA;AAAA;;AAApF;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAgF;AAAA;AAAA;;AAAhF;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACA;;AACG;;AACH;;AACJ;;AACA;;AACR;;AACI;;;;AA3BgG;;AAAA;;AAOJ;;AAAA;;;;;;;;;sEDLnFX,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTP,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEXhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaiB,iB;;;AAIX,iCAAoBC,SAApB,EAA8DX,MAA9D,EAA+E;AAAA;;AAA3D,aAAAW,SAAA,GAAAA,SAAA;AAA0C,aAAAX,MAAA,GAAAA,MAAA;AAF9D,aAAAY,EAAA,GAAoB,IAAI,oEAAJ,EAApB;AACA,aAAAV,SAAA,GAAY,KAAZ;AACiF;;;;mCAEzE,CAEP;;;gCACE;AACH,eAAKA,SAAL,GAAiB,KAAjB;AACA,eAAKU,EAAL,GAAU,IAAI,oEAAJ,EAAV;AACD;;;+BAEG;AACJ,eAAKD,SAAL,CAAeE,KAAf,CAAqB,KAAKD,EAA1B;AACC;;;mCAEO;AACN,eAAKV,SAAL,GAAiB,IAAjB;AACA,eAAKM,IAAL;AACD;;;;;;;uBArBYE,iB,EAAiB,uJ,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,q6B;AAAA;AAAA;ACX1B;;AACI;;AACI;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACA;;AAAM;AAAA,mBAAY,IAAAD,QAAA,EAAZ;AAAsB,WAAtB;;AACF;;AACA;;AACI;;AAAuG;AAAA;AAAA;;AAAvG;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AAAM;;AACN;;AACI;;AACA;;AAA2E;AAAA;AAAA;;AAA3E;;AACA;;AACA;;AACC;;AACD;;AACJ;;AAAM;;AACN;;AACI;;AACI;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;AArBuH;;AAAA;;AAQ5B;;AAAA;;;;;;;;;sEDRlFC,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTnB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACqBY;;AACE;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAiB;;AACvB;;;;;;AAJM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDfLqB,iB;;;AAMT,iCAAoBd,MAApB,EAA4Ce,WAA5C,EAAsE;AAAA;;AAAlD,aAAAf,MAAA,GAAAA,MAAA;AAAwB,aAAAe,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEjE;AAAA;;AACJ,cAAI,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAD,IAAyC,CAACF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAA1C,IACA,CAACF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,CADL,EAC4C;AAExC,iBAAKlB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA;AACH,WALD,MAKO;AACH,gBAAMC,IAAI,GAAGJ,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCG,QAAtC,EAAb;;AACA,gBAAID,IAAI,CAACE,MAAL,GAAc,CAAlB,EAAqB;AACjBhB,qBAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,mBAAKQ,WAAL,CAAiBQ,YAAjB,GACKnB,SADL,CACe,UAACoB,IAAD,EAAU;AAEjB,qBAAI,CAACC,KAAL,GAAaD,IAAI,CAACE,MAAlB;AACApB,uBAAO,CAACqB,KAAR,CAAc,KAAI,CAACF,KAAnB;AACH,eALL;AAQH,aAVD,MAUO;AACHnB,qBAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AACJ;AACJ;;;;;;;uBA9BQO,iB,EAAiB,uH,EAAA,kI;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,yQ;AAAA;AAAA;ACT9B;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAsB;;AAAI;;AAAG;;AAAK;;AAAI;;AAAK;;AAE7C;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAI;;AACR;;AAAI;;AAAa;;AACjB;;AAAsB;;AAAQ;;AAChC;;AACF;;AACA;;AACE;;AAOF;;AACF;;AACF;;AACF;;AAEF;;AAEF;;;;AAdgB;;AAAA;;;;;;;;;sEDXHA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTvB,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACwBU;;AAEE;;AAAI;;AAAS;;AACb;;AAAI;;AAAe;;AAEnB;;AAAI;;AAAW;;AAEf;;AACE;;AAAuD;;AAA0B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqB;;AAAQ;;AAAI;;AAClH;;AAAiD;;AAA0B;;AAAQ;;AAAI;;AACvF;;AAAmD;;AAA0B;;AAAQ;;AAAI;;AACzF;;AAAuD;;AAA0B;;AAAQ;;AAAI;;AAC/F;;AACF;;;;;;AAXM;;AAAA;;AACA;;AAAA;;AAEA;;AAAA;;;;QDlBHmC,e;;;AAKT,+BAAoB5B,MAApB,EAA4CW,SAA5C,EAA8E;AAAA;;AAA1D,aAAAX,MAAA,GAAAA,MAAA;AAAwB,aAAAW,SAAA,GAAAA,SAAA;AAH5C,aAAAkB,GAAA,GAAwB,EAAxB;AAGiF;;;;mCAEzE;AAEJ,cAAI,CAACb,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAD,IAAyC,CAACF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAA9C,EAAuF;AACnF,iBAAKlB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACA;AACH;AACN;;;kCACkBW,E,EAAkB;AAC/Bd,gBAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,IAA5B,EAAkCD,EAAE,CAACE,EAArC;AACA,eAAKhC,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,eAAD,CAArB;AAEH;;;gCACc;AACX,eAAKnB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACH;;;kCAEa;AACVH,gBAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,QAA/B;AACAjB,gBAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,QAA5B,EAAsC,KAAtC;AACA,eAAK/B,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACH;;;+BAEaW,E,EAAkB;AAC5Bd,gBAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,QAA/B;AACAjB,gBAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,QAA5B,EAAsCD,EAAE,CAACE,EAAH,CAAMX,QAAN,EAAtC;AACA,eAAKrB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACH;;;iCACeW,E,EAAkB;AAC9Bd,gBAAM,CAACC,YAAP,CAAoBgB,UAApB,CAA+B,UAA/B;AACAjB,gBAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,UAA5B,EAAwCD,EAAE,CAACE,EAAH,CAAMX,QAAN,EAAxC;AACA,eAAKrB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACH;;;iCACeW,E,EAAkB;AAAA;;AAC9B,eAAKnB,SAAL,CAAeuB,YAAf,CAA4BJ,EAAE,CAACE,EAA/B,EACK5B,SADL,CACe,UAAAoB,IAAI,EAAI;AACf,kBAAI,CAACK,GAAL,GAAW,MAAI,CAACA,GAAL,CAASM,MAAT,CAAgB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,KAAKN,EAAV;AAAA,aAAjB,CAAX;AACH,WAHL;AAIH;;;;;;;uBA5CQF,e,EAAe,uH,EAAA,uJ;AAAA,K;;;YAAfA,e;AAAe,kC;AAAA,e;AAAA,a;AAAA,+5B;AAAA;AAAA;ACX5B;;AAGE;;AACE;;AACE;;AACE;;AACE;;AAAsB;;AAAI;;AAAQ;;AAAG;;AAAO;;AAAI;;AAAK;;AACrD;;AACE;;AAA2H;;AAAmE;;AAAO;;AACvM;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAQ;;AAEZ;;AAAI;;AAAI;;AACR;;AAAsB;;AAAO;;AAC/B;;AACF;;AACA;;AACE;;AAgBF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAkC;AAAA,mBAAS,IAAAS,OAAA,EAAT;AAAkB,WAAlB;;AAChC;;AACF;;AACF;;AAEF;;AACF;;AAEF;;;;AA7Bc;;AAAA;;;;;;;;;sEDbDT,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET5B;AAAA;;;AAAA;AAAA;AAAA;;QAAa6C,U;;;;AAKF,eAAAC,MAAA,GAAqB,CAExB;AACIC,UAAI,EAAE,MADV;AAEIC,eAAS,EAAE;AAFf,KAFwB,EAMxB;AACID,UAAI,EAAE,MADV;AAEIC,eAAS,EAAE;AAFf,KANwB,EAUxB;AACID,UAAI,EAAE,MADV;AAEIC,eAAS,EAAE;AAFf,KAVwB,CAArB;;;;;;;;;;;;;;;;ACJX;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,Q;;;;AAKF,aAAAH,MAAA,GAAiB,CAEpB;AACII,WAAK,EAAE,IADX;AAEIF,eAAS,EAAE;AAFf,KAFoB,EAMpB;AACIE,WAAK,EAAE,IADX;AAEIF,eAAS,EAAE;AAFf,KANoB,EAUpB;AACIE,WAAK,EAAE,IADX;AAEIF,eAAS,EAAE;AAFf,KAVoB,CAAjB;;;;;;;;;;;;;;;;ACRX;AAAA;;;AAAA;AAAA;AAAA;;QAAaG,I;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,c;;;;;;;;;;;;;;;;;;;ACAb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,QAAMC,UAAU,GAAe,8DAAWP,MAA1C;AACA,QAAMQ,QAAQ,GAAW,0DAASR,MAAlC;;QAOaS,mB;;;AAGT,mCAAoBhD,MAApB,EAA4Ce,WAA5C,EAAsE;AAAA;;AAAlD,aAAAf,MAAA,GAAAA,MAAA;AAAwB,aAAAe,WAAA,GAAAA,WAAA;AAA6B;;;;mCAEjE;AACJ,cAAI,CAACC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAD,IAAyC,CAACF,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAA9C,EAAuF;AACnF,iBAAKlB,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACA;AACH;AACN;;;yCAEa;AACZjC,kBAAQ;AACT;;;sCAEU;AACTC,oBAAU;AACX;;;sCACU;AACTC,oBAAU;AACX;;;sCACU;AACTC,oBAAU;AACX;;;wCACY;AACb4D,oBAAU;AACT;;;;;;;uBA3BUD,mB,EAAmB,uH,EAAA,kI;AAAA,K;;;YAAnBA,mB;AAAmB,sC;AAAA,e;AAAA,a;AAAA,0kD;AAAA;AAAA;ACvBhC;;AACA;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAEM;;AACE;;AACmC;AAAA,mBAAS,IAAAE,WAAA,EAAT;AAAsB,WAAtB;;AADnC;;AAEA;;AAAkB;;AAAI;;AACtB;;AACmC;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AADnC;;AAEA;;AAAkB;;AAAI;;AACtB;;AACmC;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AADnC;;AAEA;;AAAkB;;AAAI;;AAAQ;;AAClC;;AACA;;AACI;;AACI;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACF;;AACH;;AACI;;AAAe;;AAAM;;AACrB;;AAAsB;;AAAW;;AAClC;;AAAiC;;AAAO;;AACxC;;AAAmC;;AAAQ;;AAC3C;;AAAoC;;AAAS;;AAC7C;;AAAoC;;AAAS;;AAC7C;;AAAoC;;AAAS;;AAC7C;;AAAsC;;AAAU;;AAChD;;AAAsC;;AAAW;;AACjD;;AAAuC;;AAAW;;AAClD;;AAAuC;;AAAW;;AAClD;;AAAuC;;AAAW;;AAClD;;AAAuC;;AAAW;;AAClD;;AAAsC;;AAAY;;AAClD;;AAAiC;;AAAO;;AACxC;;AAAiC;;AAAO;;AACxC;;AAAiC;;AAAO;;AACxC;;AAAiC;;AAAO;;AACxC;;AAAmC;;AAAQ;;AAC3C;;AAAmC;;AAAM;;AACzC;;AAEA;;AACA;;AACI;;AAEA;;AACF;;AACI;;AAAS;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AACN;;AACH;;AACJ;;AACJ;;AACJ;;AACJ;;AACJ;;;;;;;;;sEDzCaL,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTzD,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;AExBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa6D,W;;;AAKT,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAHZ,aAAAC,OAAA,GAAU,4BAAV;AAGiC;;;;qCAK5BxB,E,EAAU;AACnB,eAAKyB,GAAL,GAAW,KAAKD,OAAL,GAAe,YAA1B;AACA,eAAKE,SAAL,GAAiB,KAAKH,IAAL,CAAUI,GAAV,WAA8B,KAAKF,GAAnC,cAA0CzB,EAA1C,EAAjB;AACH;;;uCACW;AACR,cAAM4B,IAAI,GAAG,IAAb;AAEA,iBAAO,KAAKF,SAAZ;AACH;;;;;;;uBAlBQJ,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVO,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACVxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,W;;;AAIT,2BAAoBP,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AADZ,aAAAC,OAAA,GAAU,4BAAV;AACiC;;;;kCAG/BvD,I,EAAY;AAClB,iBAAO,KAAKsD,IAAL,CAAUQ,IAAV,CAA4B,2BAA2B,sBAAvD,EAA+E9D,IAA/E,CAAP;AACH;;;mCAEUA,I,EAAY;AACnB,iBAAO,KAAKsD,IAAL,CAAUQ,IAAV,WAAkB,KAAKP,OAAvB,OAAkC,UAAlC,GAAgDvD,IAAhD,CAAP;AACH;;;;;;;uBAbQ6D,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVD,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACTxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaG,qB;;;AAIX,qCAAoBT,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFV,aAAAC,OAAA,GAAU,0BAAV;AAE+B;;;;8BAGnCS,c,EAAsB;AACxB,iBAAO,KAAKV,IAAL,CAAUQ,IAAV,WAAkB,KAAKP,OAAvB,OAAkC,MAAlC,GAA4C,oEAA5C,CAAP;AACH;;;mCACYU,Q,EAAgB;AACvB,eAAKT,GAAL,GAAW,KAAKD,OAAL,GAAe,SAA1B;AACA,iBAAO,KAAKD,IAAL,CAAUI,GAAV,WAA8B,KAAKF,GAAnC,cAA0CS,QAA1C,EAAP;AACH;;;kCAESA,Q,EAAkBtD,E,EAAkB;AAC1C,eAAK6C,GAAL,GAAW,KAAKD,OAAL,GAAe,WAA1B;AACA,iBAAO,KAAKD,IAAL,CAAUY,GAAV,WAA8B,KAAKV,GAAnC,cAA0CS,QAA1C,GAAsDtD,EAAtD,CAAP;AACH;;;qCACYoB,E,EAAU;AACnB,eAAKyB,GAAL,GAAW,KAAKD,OAAL,GAAe,WAA1B;AACA,iBAAO,KAAKD,IAAL,CAAUa,MAAV,WAAiC,KAAKX,GAAtC,cAA6CzB,EAA7C,EAAP;AACH;;;;;;;uBAtBQgC,qB,EAAqB,uH;AAAA,K;;;aAArBA,qB;AAAqB,eAArBA,qBAAqB,K;AAAA,kBAFpB;;;;;sEAEDA,qB,EAAqB;cAHjC,wDAGiC;eAHtB;AACVH,oBAAU,EAAE;AADF,S;AAGsB,Q;;;;;;;;;;;;;;;;;;;;;;ACTlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaQ,kB;;;AAGT,kCAAoBtE,WAApB,EACYC,MADZ,EAC4B;AAAA;;AADR,aAAAD,WAAA,GAAAA,WAAA;AACR,aAAAC,MAAA,GAAAA,MAAA;AAHZ,aAAAC,IAAA,GAAa,IAAI,gDAAJ,EAAb;AACA,aAAAC,SAAA,GAAY,KAAZ;AAE+B;;;;mCAEzB,CACP;;;+BACQ;AAAA;;AACH,eAAKH,WAAL,CAAiBuE,SAAjB,CAA2B,KAAKrE,IAAhC,EAAsCG,SAAtC,CAAgD,UAAAoB,IAAI,EAAI;AAEpD,gBAAIA,IAAI,CAAC+C,MAAL,KAAgB,GAApB,EAAyB;AACrBvD,oBAAM,CAACC,YAAP,CAAoBc,OAApB,CAA4B,OAA5B,EAAqCP,IAAI,CAACE,MAAL,CAAY8C,KAAjD;AACG,kBAAIC,aAAJ;AACH,iEAAKC,IAAL,CAAU;AACNzF,qBAAK,EAAE,qBADD;AAEN0F,oBAAI,EAAE,SAFA;AAGNC,oBAAI,EAAE,iBAHA;AAINC,gCAAgB,EAAE,KAJZ;AAKNC,iCAAiB,EAAE,KALb;AAMNC,sBAAM,EAAE,SANF;AAONC,qBAAK,EAAE,IAPD;AAQNC,4BAAY,EAAE,wBAAM;AAChB,qEAAKC,WAAL;AACAT,+BAAa,GAAGU,WAAW,CAAC,YAAM;AAC9B,wBAAMC,OAAO,GAAG,mDAAKC,UAAL,EAAhB;;AACA,wBAAID,OAAJ,EAAa;AACT,0BAAME,CAAC,GAAGF,OAAO,CAACG,aAAR,CAAsB,GAAtB,CAAV;;AACA,0BAAID,CAAJ,EAAO;AACHA,yBAAC,CAACE,WAAF,GAAgB,MAAI,CAACvF,IAAL,CAAUiE,QAA1B;AACH;AACJ;AACJ,mBAR0B,EAQxB,GARwB,CAA3B;AASH,iBAnBK;AAoBNuB,uBAAO,EAAE,mBAAM;AACXC,+BAAa,CAACjB,aAAD,CAAb;;AACA,wBAAI,CAACkB,QAAL;AACH;AAvBK,eAAV,EAwBG3H,IAxBH,CAwBQ,UAAC0D,MAAD,EAAY;AAEhB,oBAAIA,MAAM,CAACkE,OAAP,KAAmB,mDAAKC,aAAL,CAAmBb,KAA1C,EAAiD;AAC7C1E,yBAAO,CAACC,GAAR,CAAY,2BAAZ;AAEH;AACJ,eA9BD;AAgCH,aAnCD,MAmCO;AACJD,qBAAO,CAACC,GAAR,CAAY,OAAZ;AACC,iEAAKmE,IAAL,CAAU;AACNC,oBAAI,EAAE,OADA;AAEN1F,qBAAK,EAAE,SAFD;AAGN6G,oBAAI,EAAEtE,IAAI,CAACuE;AAHL,eAAV;AAMH;AACJ,WA9CD;AA+CH;;;mCAGU;AACP,eAAK7F,SAAL,GAAiB,IAAjB;AACA,eAAKM,IAAL;AACH;;;mCAEU;AACP,eAAKR,MAAL,CAAYmB,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACH;;;;;;;uBAlEQkD,kB,EAAkB,kI,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA,e;AAAA,a;AAAA,+pB;AAAA;AAAA;ACZ/B;;AACI;;AACI;;AACI;;AACJ;;AACA;;AAAM;AAAA,mBAAY,IAAA5D,QAAA,EAAZ;AAAsB,WAAtB;;AAGF;;AACI;;AAAoF;AAAA;AAAA;;AAApF;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AAAgF;AAAA;AAAA;;AAAhF;;AACA;;AACA;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACG;;AACH;;AACJ;;AACA;;AACA;;AACG;;AACH;;AACJ;;AACA;;AACR;;AACI;;;;AAzBgG;;AAAA;;AAOJ;;AAAA;;;;;;;;;sEDJnF4D,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT9E,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEZ/B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuG,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAI9F,OAAO,CAAC+F,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport { CreateVmComponent } from './create-vm/create-vm.component';\r\nimport { SearchFileComponent } from './search-file/search-file.component';\r\nimport { ListFileComponent } from './list-file/list-file.component';\r\nimport { ListVmComponent } from './list-vm/list-vm.component';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'user/login', pathMatch: 'full' },\r\n    { path: 'user/login', component: UserLoginComponent },\r\n    { path: 'user/createUser', component: CreateUserComponent },\r\n    { path: 'addVM', component: CreateVmComponent },\r\n    { path: 'vms', component: ListVmComponent },\r\n    { path: 'files', component: ListFileComponent },\r\n    { path: 'filter', component: SearchFileComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\ndeclare const hide_all:any;\r\ndeclare const click_name:any;\r\ndeclare const click_size:any;\r\ndeclare const click_date:any;\r\ndeclare const submit:any;\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Virtual Machine';\r\n  onClickHideAll(){\r\n    hide_all();\r\n  }\r\n\r\n  onClickName(){\r\n    click_name();\r\n  }\r\n  onClickSize(){\r\n    click_size();\r\n  }\r\n  onClickDate(){\r\n    click_date();\r\n  }\r\n  onClickSubmit(){\r\n   submit();\r\n}\r\n}\r\n","\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { CreateUserComponent } from './create-user/create-user.component';\r\nimport { CreateVmComponent } from './create-vm/create-vm.component';\r\nimport { SearchFileComponent } from './search-file/search-file.component';\r\nimport { ListFileComponent } from './list-file/list-file.component';\r\nimport { ListVmComponent } from './list-vm/list-vm.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserLoginComponent,\r\n    CreateUserComponent,\r\n    CreateVmComponent,\r\n    SearchFileComponent,\r\n    ListFileComponent,\r\n    ListVmComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n      AppRoutingModule,\r\n      FormsModule,\r\n      HttpClientModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { UserService } from '../service/user.service';\r\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-create-user',\r\n  templateUrl: './create-user.component.html',\r\n  styleUrls: ['./create-user.component.css']\r\n})\r\nexport class CreateUserComponent implements OnInit {\r\n    user: User = new User();\r\n    submitted = false;\r\n  constructor(private userService: UserService,\r\n    private router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n    save() {\r\n        this.userService.createUser(this.user)\r\n              .subscribe(event => {\r\n                  if (event instanceof HttpResponse) {\r\n                      console.log('user added!')\r\n                  }\r\n              });\r\n      }\r\n  \r\n  \r\n      onSubmit() {\r\n          this.submitted = true;\r\n          this.save();\r\n      }\r\n\r\n}\r\n","<div class=\"wrap-login100\">\r\n    <div>\r\n        <span class=\"login100-form-title\">\r\n            Register\r\n        </span>\r\n        <form (ngSubmit)=\"onSubmit()\">\r\n\r\n\r\n            <div class=\"wrap-input100\">\r\n                <input class=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"user.username\">\r\n                <span class=\"focus-input100\"></span>\r\n                <span class=\"symbol-input100\">\r\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"wrap-input100 validate-input\" data-validate=\"wrong Password\">\r\n                <input class=\"input100\" type='text' name='pass' placeholder=\"Password\" required [(ngModel)]=\"user.password\">\r\n                <span class=\"focus-input100\"></span>\r\n                <span class=\"symbol-input100\">\r\n                    <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"wrap-input100 validate-input\" data-validate=\"wrong confirm password\">\r\n                <input class=\"input100\" type='text' name='confirmpassword' placeholder=\" confirm password\" required >\r\n                <span class=\"focus-input100\"></span>\r\n                <span class=\"symbol-input100\">\r\n                    <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"container-login100-form-btn\">\r\n            <button class=\"login100-form-btn\" type=\"submit\" >\r\n               Register\r\n            </button>\r\n        </div>\r\n        </form>\r\n</div>\r\n    </div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {virtualMachine} from '../model/virtualMachine';\r\nimport { VirtualMachineService } from '../service/virtual-machine.service';\r\nimport { from } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-create-vm',\r\n  templateUrl: './create-vm.component.html',\r\n  styleUrls: ['./create-vm.component.css']\r\n})\r\nexport class CreateVmComponent implements OnInit {\r\n\r\n  vm:virtualMachine = new virtualMachine();\r\n  submitted = false ;\r\n  constructor(private vmService : VirtualMachineService,private router : Router) {}\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\nnewVM():void{\r\n  this.submitted = false;\r\n  this.vm = new virtualMachine();\r\n}\r\n\r\nsave(){\r\nthis.vmService.addVM(this.vm);\r\n}\r\n\r\nonSubmit(){\r\n  this.submitted = true;\r\n  this.save();\r\n}\r\n}\r\n","\r\n    <div class=\"wrap-login100\">\r\n        <div class=\"login100-pic js-tilt\" data-tilt=\"\" style=\"will-change: transform; transform: perspective(300px) rotateX(0deg) rotateY(0deg);\">\r\n            <img src=\"../../assets/images/img-01.png\" alt=\"IMG\">\r\n        </div>\r\n        <div>\r\n            <span class=\"login100-form-title\">\r\n                Virtual Machine Register\r\n            </span>\r\n            <form (ngSubmit)=\"onSubmit()\">\r\n                <div class=\"wrap-input100\">\r\n                <div class=\"wrap-input100 validate-input\" data-validate=\"wrong IP\">\r\n                    <input class=\"input100\" type=\"text\" name='ip' placeholder=\"xxx.xxx.xxx.xx\" autocomplete=\"off\" required [(ngModel)]= \"vm.ip\" >\r\n                    <span class=\"focus-input100\"></span>\r\n                    <span class=\"symbol-input100\">\r\n                        <i class=\"fa fa-server\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div></div>\r\n                <div class=\"wrap-input100\">\r\n                    <div class=\"wrap-input100 validate-input\" data-validate=\"wrong path\">\r\n                    <input class=\"input100\" type=\"text\" name=\"path\" placeholder=\"Path\"required [(ngModel)]=\"vm.path\" >\r\n                    <span class=\"focus-input100\"></span>\r\n                    <span class=\"symbol-input100\">\r\n                     <i class=\"fa fa-folder\" aria-hidden=\"true\" ></i>\r\n                    </span>\r\n                </div></div>\r\n                <div class=\"container-login100-form-btn\">\r\n                    <button class=\"login100-form-btn\" type=\"submit\">\r\n                        Register\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { file } from '../model/file';\r\nimport { FileService } from '../service/file.service';\r\n@Component({\r\n  selector: 'app-list-file',\r\n  templateUrl: './list-file.component.html',\r\n  styleUrls: ['./list-file.component.css']\r\n})\r\nexport class ListFileComponent implements OnInit {\r\n\r\n    files: File[];\r\n    ip: string;\r\n    type: string;\r\n\r\n    constructor(private router: Router, private fileService: FileService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!window.localStorage.getItem('token') || !window.localStorage.getItem('username') ||\r\n            !window.localStorage.getItem('scanVM')) {\r\n\r\n            this.router.navigate(['login']);\r\n            return;\r\n        } else {\r\n            const isIp = window.localStorage.getItem('scanVM').toString();\r\n            if (isIp.length > 6) {\r\n                console.log(\"here at list ips\");\r\n                this.fileService.getListPerVM()\r\n                    .subscribe((data) => {\r\n\r\n                        this.files = data.result as File[];\r\n                        console.table(this.files);\r\n                    });\r\n\r\n\r\n            } else {\r\n                console.log(\"not found\");\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n<div class=\"wrap-login200\">\r\n  <div class=\"container\" style=\"float:right;width:100%\">\r\n    <div class=\"table-wrapper\">\r\n      <div class=\"table-title\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-8\"><h2><b>Files</b></h2></div>\r\n\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <table class=\"table table-bordered\" style=\"font-size: 20px;\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Size</th>\r\n              <th>Creation Date</th>\r\n              <th style=\"width:26%\">Location</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let file of files\">\r\n              <td>{{file.fileName}}</td>\r\n              <td>{{file.sizeInBytes}}</td>\r\n              <td>{{file.creationDate}}</td>\r\n              <td>{{file.location}}</td>\r\n            </tr>\r\n\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { virtualMachine } from '../model/virtualMachine';\r\nimport { User } from \"../model/user\";\r\nimport { VirtualMachineService } from '../service/virtual-machine.service';\r\n\r\n@Component({\r\n  selector: 'app-list-vm',\r\n  templateUrl: './list-vm.component.html',\r\n  styleUrls: ['./list-vm.component.css']\r\n})\r\nexport class ListVmComponent implements OnInit {\r\n\r\n    vms: virtualMachine[] = [];\r\n    usename: string;\r\n\r\n    constructor(private router: Router, private vmService: VirtualMachineService) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        if (!window.localStorage.getItem('token') || !window.localStorage.getItem('username')) {\r\n            this.router.navigate(['login']);\r\n            return;\r\n        }\r\n  }\r\n    public listFiles(VM: virtualMachine): void {\r\n        window.localStorage.setItem('IP', VM.ip);\r\n        this.router.navigate(['file/listfile']);\r\n\r\n    };\r\n    public addVM() {\r\n        this.router.navigate(['addVM']);\r\n    };\r\n\r\n    public scanAll(): void {\r\n        window.localStorage.removeItem(\"scanVM\");\r\n        window.localStorage.setItem(\"scanVM\", \"all\");\r\n        this.router.navigate(['file/filter']);\r\n    };\r\n\r\n    public scanVM(VM: virtualMachine): void {\r\n        window.localStorage.removeItem(\"scanVM\");\r\n        window.localStorage.setItem(\"scanVM\", VM.ip.toString());\r\n        this.router.navigate(['file/filter']);\r\n    };\r\n    public updateVM(VM: virtualMachine): void {\r\n        window.localStorage.removeItem(\"updateVM\");\r\n        window.localStorage.setItem(\"updateVM\", VM.ip.toString());\r\n        this.router.navigate(['vm/update-vm']);\r\n    };\r\n    public deleteVM(VM: virtualMachine): void {\r\n        this.vmService.deleteVMByIP(VM.ip)\r\n            .subscribe(data => {\r\n                this.vms = this.vms.filter(v => v !== VM);\r\n            })\r\n    };\r\n}\r\n","<div class=\"wrap-login200\">\r\n\r\n\r\n  <div class=\"container\" style=\"float:right;width:100%\">\r\n    <div class=\"table-wrapper\">\r\n      <div class=\"table-title\">\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-8\"><h2>Virtual <b>Machine</b></h2></div>\r\n          <div class=\"col-sm-4\">\r\n            <button type=\"button\" style=\"background-color:#000000a1; color: white;border-color: #4CAF50;\" class=\"btn btn-info add-new\"><i class=\"fa fa-plus fa-lg\" style=\"color:white;\"><!-- icon --></i> Add New</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <table class=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>VMIP</th>\r\n            <th>USERNAME</th>\r\n\r\n            <th>PATH</th>\r\n            <th style=\"width:18%\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr *ngFor=\"let vm of vms\">\r\n\r\n            <td>{{vm.ip}}</td>\r\n            <td>{{vm.userName}}</td>\r\n\r\n            <td>{{vm.path}}</td>\r\n\r\n            <td>\r\n              <a class=\"search\" title=\"Search\" data-toggle=\"tooltip\"><i class=\"material-icons\" (click)=\"scanVM(vm)\">&#xE8B6;</i></a>\r\n              <a class=\"add\" title=\"Add\" data-toggle=\"tooltip\"><i class=\"material-icons\">&#xE03B;</i></a>\r\n              <a class=\"edit\" title=\"Edit\" data-toggle=\"tooltip\"><i class=\"material-icons\">&#xE254;</i></a>\r\n              <a class=\"delete\" title=\"Delete\" data-toggle=\"tooltip\"><i class=\"material-icons\">&#xE872;</i></a>\r\n            </td>\r\n          </tr>\r\n\r\n\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div style=\"float:right;width:100%;margin-top:-250px\">\r\n      <div style=\"width:65%; margin:auto; display:block;\" class=\"container-login100-form-btn\">\r\n        <button class=\"login100-form-btn\" (click)=\"scanAll()\">\r\n          Scan Files\r\n        </button>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n","import { FilterBy } from './filter-by';\r\n\r\nexport class FilterList {\r\n\r\n\r\n    radioVal: string;\r\n\r\n    static values: FilterBy[] = [\r\n\r\n        {\r\n            name: 'name',\r\n            viewValue: 'Name'\r\n        },\r\n        {\r\n            name: 'size',\r\n            viewValue: 'Size'\r\n        },\r\n        {\r\n            name: 'date',\r\n            viewValue: 'Creation Date'\r\n        }\r\n\r\n    ];\r\n}\r\n","import { Size } from './size';\r\n\r\n\r\nexport class SizeList {\r\n\r\n\r\n    selVal: string;\r\n\r\n    static values: Size[] = [\r\n\r\n        {\r\n            value: 'KB',\r\n            viewValue: 'KB'\r\n        },\r\n        {\r\n            value: 'MB',\r\n            viewValue: 'MB'\r\n        },\r\n        {\r\n            value: 'GB',\r\n            viewValue: 'GB'\r\n        }\r\n\r\n    ];\r\n}\r\n","export class User {\r\n    username: string;\r\n    password: string;\r\n}\r\n","export class virtualMachine {\r\n\r\n    ip: string;\r\n    userName: string;\r\n    password: string;\r\n    path: string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FileService } from '../service/file.service';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { from } from 'rxjs';\r\nimport { FilterBy } from '../model/filter-by';\r\nimport { FilterList } from '../model/filter-list';\r\nimport { Size } from '../model/size';\r\nimport { SizeList } from '../model/size-list';\r\n\r\ndeclare const hide_all:any;\r\ndeclare const click_name:any;\r\ndeclare const click_size:any;\r\ndeclare const click_date:any;\r\ndeclare const checkInput:any;\r\n\r\nconst listFilter: FilterBy[] = FilterList.values;\r\nconst listSize: Size[] = SizeList.values;\r\n\r\n@Component({\r\n  selector: 'app-search-file',\r\n  templateUrl: './search-file.component.html',\r\n  styleUrls: ['./search-file.component.css']\r\n})\r\nexport class SearchFileComponent implements OnInit {\r\n\r\n\r\n    constructor(private router: Router, private fileService: FileService) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!window.localStorage.getItem('token') || !window.localStorage.getItem('username')) {\r\n            this.router.navigate(['user/login']);\r\n            return;\r\n        }\r\n  }\r\n\r\n  onClickHideAll(){\r\n    hide_all();\r\n  }\r\n\r\n  onClickName(){\r\n    click_name();\r\n  }\r\n  onClickSize(){\r\n    click_size();\r\n  }\r\n  onClickDate(){\r\n    click_date();\r\n  }\r\n  onClickSubmit(){\r\n  checkInput();\r\n  }\r\n\r\n}\r\n","     \r\n<body >\r\n<div class=\"wrap-login100\">\r\n    <div>\r\n        <span class=\"login100-form-title\">\r\n            Search By File\r\n        </span>\r\n        <form name=\"form1\">\r\n\r\n              <div class=\"login100-form-title\">  \r\n                <input type=\"radio\" id=\"name\"\r\n                       name=\"contact\" value=\"name\" (click)=\"onClickName()\">\r\n                <label for=\"name\">Name</label>\r\n                <input type=\"radio\" id=\"size\"\r\n                       name=\"contact\" value=\"size\" (click)=\"onClickSize()\">\r\n                <label for=\"size\">Size</label>\r\n                <input type=\"radio\" id=\"date\"\r\n                       name=\"contact\" value=\"date\" (click)=\"onClickDate()\">\r\n                <label for=\"date\">Date</label></div>\r\n            </form>\r\n            <form name=\"form1\" action=\"#\">\r\n                <div class=\"wrap-input100\">\r\n                    <input class=\"input100\" type=\"hidden\" id=\"filename\" name=\"fileName1\" placeholder=\"File Name\" required>\r\n                    <span class=\"focus-input100\"></span>\r\n                    <span class=\"symbol-input100\">\r\n                        <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                    </span>\r\n                </div>\r\n              <div >\r\n           <select class=\"login100-form-btn \" id=\"dropdown\" style=\"display:none\" placeholder=\"Select Size\">\r\n               <a id=\"first\" >Select</a>\r\n               <option value=\"size\" >Select Size</option>\r\n              <option value=\"0--5 MB\" id=\"5MB\">0--5 MB</option>\r\n              <option value=\"5--10 MB\" id=\"10MB\">5--10 MB</option>\r\n              <option value=\"10--20 MB\" id=\"20MB\">10--20 MB</option>\r\n              <option value=\"20--40 MB\" id=\"40MB\">20--40 MB</option>\r\n              <option value=\"40--80 MB\" id=\"80MB\">40--80 MB</option>\r\n              <option value=\"80--120 MB\" id=\"120MB\">80--120 MB</option>\r\n              <option value=\"20--150 MB\" id=\"150MB\">120--150 MB</option>\r\n              <option value=\"150--200 MB\" id=\"200MB\">150--200 MB</option>\r\n              <option value=\"200--250 MB\" id=\"250MB\">200--250 MB</option>\r\n              <option value=\"250--500 MB\" id=\"500MB\">250--500 MB</option>\r\n              <option value=\"500--800 MB\" id=\"800MB\">500--800 MB</option>\r\n              <option value=\"800--1000 MB\" id=\"1GB\">800--1000 MB</option>\r\n              <option value=\"1--2 GB\" id=\"2GB\">1--2 GB</option>\r\n              <option value=\"2--4 GB\" id=\"4GB\">2--4 GB</option>\r\n              <option value=\"4--6 GB\" id=\"6GB\">4--6 GB</option>\r\n              <option value=\"6--8 GB\" id=\"8GB\">6--8 GB</option>\r\n              <option value=\"8--10 GB\" id=\"10GB\">8--10 GB</option>\r\n              <option value=\"10+ GB\" id =\"10+GB\">10+ GB</option>\r\n              </select>\r\n\r\n              </div>\r\n              <div class=\"container-login100-form-btn\">\r\n                  <input class=\"login100-form-btn \" type=\"hidden\" id=\"myDate\"  >\r\n\r\n                  </div>\r\n                <div class=\"container-login100-form-btn\">\r\n                    <button  (click)=\"onClickSubmit()\" class=\"login100-form-btn \" id=\"submitID\"   >\r\n                       Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</body>","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpRequest, HttpEvent, HttpParams } from '@angular/common/http';\r\nimport { virtualMachine } from '../model/virtualMachine';\r\nimport { file } from '../model/file';\r\nimport { ApiResponse } from '../model/api.response';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FileService {\r\n\r\n    private baseUrl = 'http://localhost:8080/file';\r\n    private url: string; \r\n  \r\n    constructor(private http: HttpClient) { }\r\n    private listPerVM: Observable<ApiResponse>;\r\n    private listAllVMSRes: Observable<ApiResponse>;\r\n\r\n\r\n    getFilesList(ip: string): void {\r\n        this.url = this.baseUrl + '/listfiles';\r\n        this.listPerVM = this.http.get<ApiResponse>(`${this.url}/${ip}`);\r\n    }\r\n    getListPerVM(): Observable<ApiResponse> {\r\n        const type = 'ip';\r\n\r\n        return this.listPerVM;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { User } from \"../model/user\";\r\nimport { Observable } from \"rxjs/index\";\r\nimport { ApiResponse } from \"../model/api.response\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n\r\n    private baseUrl = 'http://localhost:8080/user';\r\n    constructor(private http: HttpClient) { }\r\n\r\n\r\n    userLogin(user: Object): Observable<ApiResponse> {\r\n        return this.http.post<ApiResponse>('http://localhost:8080/' + 'token/generate-token', user);\r\n    }\r\n\r\n    createUser(user: Object): Observable<object> {\r\n        return this.http.post(`${this.baseUrl}/${'register'}`, user);\r\n    }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { HttpClient, HttpRequest, HttpEvent } from '@angular/common/http';\r\nimport { virtualMachine } from '../model/virtualMachine';\r\nimport { ApiResponse } from '../model/api.response';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VirtualMachineService {\r\n\r\n    private baseUrl = 'http://localhost:8080/vm';\r\n    private url: string;\r\n  constructor(private http: HttpClient) { }\r\n\r\n\r\n  addVM(VirtualMachine: Object): Observable<Object> {\r\n      return this.http.post(`${this.baseUrl}/${'post'}`, virtualMachine);\r\n  }\r\n    getListVms(username: string): Observable<ApiResponse> {\r\n        this.url = this.baseUrl + '/listVM';\r\n        return this.http.get<ApiResponse>(`${this.url}/${username}`);\r\n    }\r\n\r\n    updateVMs(username: string, vm: virtualMachine): Observable<ApiResponse> {\r\n        this.url = this.baseUrl + '/updateVM';\r\n        return this.http.put<ApiResponse>(`${this.url}/${username}`, vm);\r\n    }\r\n    deleteVMByIP(ip: string): Observable<ApiResponse> {\r\n        this.url = this.baseUrl + '/deleteVM';\r\n        return this.http.delete<ApiResponse>(`${this.url}/${ip}`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { User } from '../model/user';\r\nimport { UserService } from '../service/user.service';\r\nimport { HttpClient, HttpResponse, HttpEventType } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport Swal from 'sweetalert2'\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit {\r\n    user: User = new User();\r\n    submitted = false;\r\n    constructor(private userService: UserService,\r\n        private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n    save() {\r\n        this.userService.userLogin(this.user).subscribe(data => {\r\n          \r\n            if (data.status === 200) {\r\n                window.localStorage.setItem('token', data.result.token);\r\n                   let timerInterval\r\n                Swal.fire({\r\n                    title: 'You just signed in!',\r\n                    icon: 'success',\r\n                    html: 'Welcome <b></b>',\r\n                    showCancelButton: false,\r\n                    showConfirmButton: false,\r\n                    footer: '<a </a>',\r\n                    timer: 2500,\r\n                    onBeforeOpen: () => {\r\n                        Swal.showLoading()\r\n                        timerInterval = setInterval(() => {\r\n                            const content = Swal.getContent()\r\n                            if (content) {\r\n                                const b = content.querySelector('b')\r\n                                if (b) {\r\n                                    b.textContent = this.user.username\r\n                                }\r\n                            }\r\n                        }, 100)\r\n                    },\r\n                    onClose: () => {\r\n                        clearInterval(timerInterval)\r\n                        this.gotoList()\r\n                    }\r\n                }).then((result) => {\r\n                   \r\n                    if (result.dismiss === Swal.DismissReason.timer) {\r\n                        console.log('I was closed by the timer')\r\n                    \r\n                    }\r\n                })\r\n       \r\n            } else {\r\n               console.log(\"false\");\r\n                Swal.fire({\r\n                    icon: 'error',\r\n                    title: 'Oops...',\r\n                    text: data.message,\r\n                  \r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        this.submitted = true;\r\n        this.save();\r\n    }\r\n\r\n    gotoList() {\r\n        this.router.navigate(['/vms']);\r\n    }\r\n}\r\n","<div class=\"wrap-login100\">\r\n    <div>\r\n        <span class=\"login100-form-title\">\r\n            Log in\r\n        </span>\r\n        <form (ngSubmit)=\"onSubmit()\">\r\n\r\n\r\n            <div class=\"wrap-input100\">\r\n                <input class=\"input100\" type=\"text\" name=\"username\" placeholder=\"Username\" required [(ngModel)]=\"user.username\">\r\n                <span class=\"focus-input100\"></span>\r\n                <span class=\"symbol-input100\">\r\n                    <i class=\"fa fa-user\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"wrap-input100 validate-input\" data-validate=\"wrong Password\">\r\n                <input class=\"input100\" type='text' name='pass' placeholder=\"Password\" required [(ngModel)]=\"user.password\">\r\n                <span class=\"focus-input100\"></span>\r\n                <span class=\"symbol-input100\">\r\n                    <i class=\"fa fa-lock\" aria-hidden=\"true\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"container-login100-form-btn\">\r\n                <button class=\"login100-form-btn\">\r\n                   Log in\r\n                </button>\r\n            </div>\r\n            <div class=\"container-login100-form-btn\">\r\n            <button class=\"login100-form-btn\" type=\"submit\" >\r\n               Register\r\n            </button>\r\n        </div>\r\n        </form>\r\n</div>\r\n    </div>\r\n\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}